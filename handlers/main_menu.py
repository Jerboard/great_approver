from aiogram.types import ChatJoinRequest, Message, CallbackQuery, ReplyKeyboardRemove, MessageEntity
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.enums.content_type import ContentType

import logging
import json

import db
import keyboards as kb
from init import dp, bot, ADMINS, CHANNEL_ID
from utils.entities_utils import recover_entities
from enums import BaseCB, KeyboardButtons, TextTypes


async def com_start_for_user(user_id: int):
    # text = ('–°–∫–æ—Ä–µ–µ –∑–∞–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫ –∫—É—Ä—Å "60 –∑–∞–∫–æ–Ω–æ–≤ –¥–µ–Ω–µ–≥" –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ:\n'
    #         '‚û°Ô∏è https://t.me/+vlvsa5AvvQEzOGFi')
    text_info = await db.get_text (channel_id=CHANNEL_ID, text_type=TextTypes.SECOND.value)
    entities = recover_entities (text_info.entities)
    if text_info.photo_id:
        await bot.send_photo (
            chat_id=user_id,
            photo=text_info.photo_id,
            caption=text_info.text,
            caption_entities=entities,
            parse_mode=None,
            protect_content=True,
            reply_markup=ReplyKeyboardRemove ())
    else:
        await bot.send_message(
            chat_id=user_id,
            text=text_info.text,
            entities=entities,
            parse_mode=None,
            protect_content=True,
            reply_markup=ReplyKeyboardRemove())


@dp.chat_join_request()
async def chat_join_request(request: ChatJoinRequest):
    # text = ('–í–∞–º –ø–æ–¥–∞—Ä–æ–∫ üéÅ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –ê–Ω–∞—Å—Ç–∞—Å–∏–∏ –ê\n\n'
    #         '–ü—Ä–∏–≤–µ—Ç, –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞ ü™Ñ\n\n'
    #         '–î–∞—Ä–∏–º —Å—É–ø–µ—Ä –≤–∞–∂–Ω—ã–π –∫—É—Ä—Å, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–µ–Ω–µ–∂–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –º–Ω–æ–≥–∏—Ö –≤–æ–ª—à–µ–±–Ω–∏—Ü üî•\n\n'
    #         'üí∞ ¬´60 –∑–∞–∫–æ–Ω–æ–≤ –¥–µ–Ω–µ–≥¬ª üí∞\n\n'
    #         '–≠—Ç–æ 60 –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∞—É–¥–∏–æ –≤ –∑–∞–∫—Ä—ã—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞ –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –∂–µ–ª–∞–Ω–∏–π üí•\n\n'
    #         '–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞:\n\n'
    #         '- –≤—ã —É–∑–Ω–∞–µ—Ç–µ –æ —Å–∞–º—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –∏ –ø—Ä–æ—Å—Ç—ã—Ö –¥–µ–Ω–µ–∂–Ω—ã—Ö –∑–∞–∫–æ–Ω–∞—Ö\n'
    #         '- –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–æ—â–µ –Ω–µ –Ω–∞—Ä—É—à–∞—Ç—å –∑–∞–∫–æ–Ω—ã –¥–µ–Ω–µ–≥ –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n'
    #         '- —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ–µ –¥–µ–Ω–µ–∂–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –ø—Ä–∏—Ç—è–Ω–µ—Ç–µ –∏–∑–æ–±–∏–ª–∏–µ\n\n'
    #         '–ù–∞–∂–º–∏—Ç–µ üëâ /start –∏–ª–∏ –∫–Ω–æ–ø–∫—É "–ü–û–õ–£–ß–ò–¢–¨ –ü–û–î–ê–†–û–ö" üëá –∏ –ø–æ–ª—É—á–∏ –¥–æ—Å—Ç—É–ø –Ω–∞ –∫—É—Ä—Å ‚ú®')

    text_info = await db.get_text(channel_id=CHANNEL_ID, text_type=TextTypes.FIRST.value)
    entities = recover_entities(text_info.entities)

    button_info = await db.get_text (channel_id=CHANNEL_ID, text_type=TextTypes.BUTTON.value)

    if text_info.photo_id:
        await request.answer_photo_pm(
            photo=text_info.photo_id,
            caption=text_info.text,
            caption_entities=entities,
            parse_mode=None,
            reply_markup=kb.get_stat_user_kb (text=button_info.text)
        )
    else:
        await request.answer_pm(
            text=text_info.text,
            entities=entities,
            parse_mode=None,
            reply_markup=kb.get_stat_user_kb(text=button_info.text)
        )
    try:
        await request.approve()
    except Exception as ex:
        text = (f'‚ÄºÔ∏è –ù–µ —Å–º–æ–∫ –æ–¥–æ–±—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å\n'
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {request.from_user.full_name} ({request.from_user.username})\n'
                f'{ex}')
        for admin_id in ADMINS:
            await bot.send_message(chat_id=admin_id, text=text)

    finally:
        await db.add_user(
            user_id=request.from_user.id,
            full_name=request.from_user.full_name,
            username=request.from_user.username,
            channel_id=request.chat.id
        )


# —Å—Ç–∞—Ä—Ç
@dp.message (CommandStart())
async def com_start(msg: Message):
    if msg.from_user.id in ADMINS:
        users = await db.get_all_users()
        text = f'<b>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {len(users)}'
        await msg.answer(text, reply_markup=kb.get_admin_kb())
    else:
        await com_start_for_user(user_id=msg.from_user.id)


# —Å—Ç–∞—Ä—Ç –ø–æ –∫–Ω–æ–ø–∫–µ
# @dp.message (lambda msg: msg.text == KeyboardButtons.SEND_PRICE.value, StateFilter(default_state))
@dp.message (StateFilter(default_state))
async def com_start(msg: Message):
    await com_start_for_user(user_id=msg.from_user.id)


# –æ—Ç–º–µ–Ω–∞
@dp.callback_query(lambda cb: cb.data.startswith(BaseCB.CLOSE.value))
async def sending_messages(cb: CallbackQuery, state: FSMContext):
    await state.clear()
    await cb.message.delete()
